@model Domain.Dto.BaseListResultDto<Domain.Dto.Identificacao.UsuarioListDto>
@{
    Layout = "";
}

<h1 class="h3">Usuários</h1>
@if (Model.Total > 1)
{
    <h6 class="card-subtitle text-muted">@Model.Total Usuários Cadastrados</h6>
}
else if (Model.Total == 1)
{
    <h6 class="card-subtitle text-muted">@Model.Total Usuário Cadastrado</h6>
}
else
{
    <h6 class="card-subtitle text-muted">Nenhum Usuário Cadastrado</h6>
}

<div class="row mt-2">
    <div class="col-12">
        <div class="card rounded-5">
            <div class="card-body">
                <div class="row">
                    <div class="col-12 d-flex justify-content-between">
                        <div class="d-none d-sm-inline-block">
                            <div b-78367sr58w="" class="input-group input-group-navbar">
                                <input ype="text" class="form-control" placeholder="Buscar usuários">
                                <button class="btn" type="button">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-search align-middle" b-78367sr58w=""><circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line></svg>
                                </button>
                            </div>
                        </div>
                        <button class="btn btn-primary">+ Adicionar</button>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <div class="table-responsive">
                            <table class="table table-striped table-hover table-borderless mb-0" role="grid">
                                <thead>
                                    <tr>
                                        <th>Nome</th>
                                        <th>Email</th>
                                        <th>Cargo</th>
                                        <th>Setor</th>
                                        <th>Status</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var usuario in Model.Items)
                                    {
                                        <tr>
                                            <td>
                                                <img class="rounded-circle me-2" src="@Url.Content($"~/img/avatars/{usuario.Foto}")" height="48" alt="profile">
                                                @usuario.Nome
                                            </td>
                                            <td>@usuario.Email</td>
                                            <td>@usuario.Cargo</td>
                                            <td>@usuario.Setor</td>
                                            <td>
                                                <div class="text-success">Ativo</div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
    
<div class="row">
    <div class="col-12 text-end">
        <ul class="pagination">
        @{
            int numeroDeBotoes = 5;
            int pivot = Model.Pagina >= numeroDeBotoes ? Model.Pagina - 2 : 1;
            int totalPaginas = (int)Math.Ceiling((double)Model.Total / 20);

            for (int i = pivot; i <= (pivot + numeroDeBotoes - 1); i++)
            {
                if (i > totalPaginas) { break; };

                if (totalPaginas > numeroDeBotoes && i == pivot)
                {
                    string primeiraSetaCss = Model.Pagina == 1 ? "light" : "secondary";
                        string primeiraSetaAction = Model.Pagina == 1 ? "disabled" : $"onclick='paginar({Model.Pagina - 1})'";
                    <li class="page-item">
                        <a class="page-link" href="#" aria-label="Previous" @Html.Raw(primeiraSetaAction)>
                            <span aria-hidden="true">«</span>
                        </a>
                    </li>
                }

                if (totalPaginas > numeroDeBotoes && Model.Pagina >= numeroDeBotoes && i == pivot)
                {
                        string resetPaginaUmAction = Model.Pagina == 1 ? "disabled" : $"onclick='paginar(1)'";
                    <li class="page-item"><a class="page-link" href="#" @Html.Raw(resetPaginaUmAction)>1 ...</a></li>
                }

                string botoesCss = i == Model.Pagina ? "light" : "secondary";
                    string botoesAction = i == Model.Pagina ? "disabled" : $"onclick='paginar({i})'";
                <li class="page-item"><a class="page-link" href="#" @Html.Raw(botoesAction)>@i</a></li>

                if (totalPaginas > numeroDeBotoes && i == (pivot + numeroDeBotoes - 1))
                {
                    string ultimaPaginaCss = Model.Pagina == totalPaginas ? "light" : "secondary";
                        string ultimaPaginaAction = Model.Pagina == totalPaginas ? "disabled" : $"onclick='paginar({totalPaginas})'";
                        <li class="page-item"><a class="page-link" href="#" @Html.Raw(ultimaPaginaAction)>... @totalPaginas</a></li>
                }

                if (totalPaginas > numeroDeBotoes && i == (pivot + numeroDeBotoes - 1))
                {
                    string ultimaSetaCss = Model.Pagina == totalPaginas ? "light" : "secondary";
                        string ultimaSetaAction = Model.Pagina == totalPaginas ? "disabled" : $"onclick='paginar({totalPaginas})'";
                    <li class="page-item">
                        <a class="page-link" href="#" aria-label="Next" @Html.Raw(ultimaSetaAction)>
                            <span aria-hidden="true">»</span>
                        </a>
                    </li>
                }
            }
        }
        </ul>
    </div>
</div>