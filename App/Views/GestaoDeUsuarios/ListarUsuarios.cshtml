@model Domain.Dto.BaseListResultDto<Domain.Dto.Identificacao.UsuarioListDto>
@{
    Layout = "";
}

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <div class="header-header d-flex w-100">
                    <div>
                        <h5 class="card-title mb-1">Usuários Cadastrados</h5>
                        @if(Model.Total > 1)
                        {
                            <h6 class="card-subtitle text-muted">@Model.Total Usuários Cadastrados</h6>
                        }
                        else if (Model.Total == 1)
                        {
                            <h6 class="card-subtitle text-muted">@Model.Total Usuário Cadastrado</h6>
                        }
                        else
                        {
                            <h6 class="card-subtitle text-muted">Nenhum Usuário Cadastrado</h6>
                        }
                    </div>
                    <div class="col-4 float-end">
                        <div class="input-group">
						    <div class="input-group-prepend">
							    <span class="input-group-text">
                                    <i class="align-middle" data-feather="search"></i>
                                </span>
						    </div>
						    <input type="text" class="form-control" placeholder="Username">
					    </div>
                    </div>
                </div>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive mt-4">
                    <table id="basic-table" class="table table-striped mb-0" role="grid">
                        <thead>
                            <tr>
                                <th></th>
                                <th>Nome</th>
                                <th>Email</th>
                                <th>Cargo</th>
                                <th>Setor</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var usuario in Model.Items)
                            {
                                <tr>
                                    <td>
                                        <img class="rounded" src="@Url.Content($"~/img/avatars/{usuario.Foto}")" width="40" alt="profile">
                                    </td>
                                    <td>@usuario.Nome</td>
                                    <td>@usuario.Email</td>
                                    <td>@usuario.Cargo</td>
                                    <td>@usuario.Setor</td>
                                    <td>
                                        <div class="text-success">Ativo</div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
    
<div class="row">
    <div class="col-12">
        <ul class="pagination">
        @{
            int numeroDeBotoes = 5;
            int pivot = Model.PageIndex >= numeroDeBotoes ? Model.PageIndex - 2 : 1;
            int totalPaginas = (int)Math.Ceiling((double)Model.Total / 20);

            for (int i = pivot; i <= (pivot + numeroDeBotoes - 1); i++)
            {
                if (i > totalPaginas) { break; };

                if (totalPaginas > numeroDeBotoes && i == pivot)
                {
                    string primeiraSetaCss = Model.PageIndex == 1 ? "light" : "secondary";
                        string primeiraSetaAction = Model.PageIndex == 1 ? "disabled" : $"onclick='paginar({Model.PageIndex - 1})'";
                    <li class="page-item">
                        <a class="page-link" href="#" aria-label="Previous" @Html.Raw(primeiraSetaAction)>
                            <span aria-hidden="true">«</span>
                        </a>
                    </li>
                }

                if (totalPaginas > numeroDeBotoes && Model.PageIndex >= numeroDeBotoes && i == pivot)
                {
                        string resetPaginaUmAction = Model.PageIndex == 1 ? "disabled" : $"onclick='paginar(1)'";
                    <li class="page-item"><a class="page-link" href="#" @Html.Raw(resetPaginaUmAction)>1 ...</a></li>
                }

                string botoesCss = i == Model.PageIndex ? "light" : "secondary";
                    string botoesAction = i == Model.PageIndex ? "disabled" : $"onclick='paginar({i})'";
                <li class="page-item"><a class="page-link" href="#" @Html.Raw(botoesAction)>@i</a></li>

                if (totalPaginas > numeroDeBotoes && i == (pivot + numeroDeBotoes - 1))
                {
                    string ultimaPaginaCss = Model.PageIndex == totalPaginas ? "light" : "secondary";
                        string ultimaPaginaAction = Model.PageIndex == totalPaginas ? "disabled" : $"onclick='paginar({totalPaginas})'";
                        <li class="page-item"><a class="page-link" href="#" @Html.Raw(ultimaPaginaAction)>... @totalPaginas</a></li>
                }

                if (totalPaginas > numeroDeBotoes && i == (pivot + numeroDeBotoes - 1))
                {
                    string ultimaSetaCss = Model.PageIndex == totalPaginas ? "light" : "secondary";
                        string ultimaSetaAction = Model.PageIndex == totalPaginas ? "disabled" : $"onclick='paginar({totalPaginas})'";
                    <li class="page-item">
                        <a class="page-link" href="#" aria-label="Next" @Html.Raw(ultimaSetaAction)>
                            <span aria-hidden="true">»</span>
                        </a>
                    </li>
                }
            }
        }
        </ul>
    </div>
</div>