@model Domain.Dto.BaseListResultDto<Domain.Dto.Organizacao.UnidadeListDto>

@{
    ViewData["Titulo"] = "Unidades";
}

<div class="container-fluid">
    <div class="d-md-flex d-block align-items-center justify-content-between my-4 page-header-breadcrumb">
        <div class="my-auto">
            <h5 class="page-title fs-21 mb-1">Unidades</h5>
            <nav>
                <ol class="breadcrumb mb-0">
                    <li class="breadcrumb-item"><a href="javascript:void(0);">Gestão de Usuários</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Listar</li>
                </ol>
            </nav>
        </div>
    </div>

    <div class="row">
        <div class="col-xl-12">
            <div class="card custom-card">
                <div class="card-header justify-content-between">
                    <form asp-action="Unidades" method="get">
                        <div class="input-group mb-3 col-4">
                            <input type="text" class="form-control" name="Filtro" placeholder="Buscar...">
                            <button class="btn btn-primary" type="submit" value="Search"><i class="fa fa-search"></i></button>
                        </div>
                    </form>
                    <div>
                        <button type="button" class="btn btn-danger d-none" id="btnDeletarMassivo" >    
                            Remover Selecionados
                        </button>
                        <a asp-controller="Organizacao" asp-action="ExportarExcelUnidades" class="btn btn-primary">
                            Exportar Excel
                        </a>
                        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#importModal">
                            Importar Unidades
                        </button>
                        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#_AdicionarUnidadeModal">
                            Adicionar
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table text-nowrap">
                            <thead>
                                <tr>
                                    <th scope="col" width="16px">
                                        <input id="selecionarTodos" class="form-check-input" type="checkbox">
                                    </th>
                                    <th scope="col">Código</th>
                                    <th scope="col">Chave</th>
                                    <th scope="col">Nome</th>
                                    <th scope="col">Ações</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Items)
                                {
                                    <tr>
                                        <th scope="row" width="16px">
                                            <input class="form-check-input check-unidade" type="checkbox" value="@item.Codigo">
                                        </th>
                                        <td>@item.Codigo</td>
                                        <td>@item.Chave</td>
                                        <td>@item.Nome</td>
                                        <td><button class="btn btn-icon btn-sm btn-danger delete"><i class="ri-delete-bin-line"></i></button></td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <partial name="_PaginacaopartialView" model="@Model.Paginacao" />

    <partial name="_ModalUploadExcelUnidadesPartialView" model="1" />
    <partial name="_ModalAdicionarUnidadePartialView" model="1" />
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#importarExcel').submit(function (event) {
                event.preventDefault();

                var formData = new FormData(this);

                $.ajax({
                    url: $(this).attr('action'),
                    type: $(this).attr('method'),
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Sucesso',
                            text: 'Importação realizada com sucesso'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                location.reload();
                            }
                        });
                    },
                    error: function () {
                        Swal.fire({
                            icon: 'error',
                            title: 'Erro',
                            text: 'Ocorreu um erro durante a importação. Tente novamente.',
                        });
                    }
                });
            });

            $('#selecionarTodos').change(function () {
                var isChecked = $(this).is(':checked');
                $('.check-unidade').prop('checked', isChecked);
                toggleDeleteButton();
            });

            $('.check-unidade').change(function () {
                toggleDeleteButton();
            });

            function toggleDeleteButton() {
                var anyChecked = $('.check-unidade:checked').length > 0;
                if (anyChecked) {
                    $('#btnDeletarMassivo').removeClass('d-none');
                } else {
                    $('#btnDeletarMassivo').addClass('d-none');
                }
            }

            $(document).on('click', '.delete', function () {
                // Obtém o valor do checkbox associado à linha do botão clicado
                var unidade = Number($(this).closest('tr').find('.check-unidade').val());

                // Chama a função de deleção com um array contendo apenas a unidade
                deletarUnidades([unidade]);
            });

            // Enviar unidades selecionadas via AJAX
            $('#btnDeletarMassivo').click(function () {
                // Obtém os valores dos checkboxes marcados
                var selectedUnits = [];
                $('.check-unidade:checked').each(function () {
                    selectedUnits.push(Number($(this).val()));
                });

                // Chama a função de deleção com os itens selecionados
                deletarUnidades(selectedUnits);
            });
        });

        function deletarUnidades(selectedUnits) {
            // Verifica se há unidades selecionadas
            if (selectedUnits.length === 0) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Atenção',
                    text: 'Nenhuma unidade foi selecionada!',
                });
                return;
            }

            // Envia os dados via AJAX
            $.ajax({
                url: '@Url.Action("InativarUnidades", "Organizacao")', // Endpoint do backend
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(selectedUnits),
                success: function (response) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Sucesso',
                        text: 'Unidades enviadas com sucesso!',
                    }).then((result) => {
                        if (result.isConfirmed) {
                            location.reload(); // Atualiza a página após sucesso
                        }
                    });
                },
                error: function (jqXHR) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Erro',
                        text: 'Ocorreu um erro ao enviar as unidades. Tente novamente mais tarde.',
                    });
                }
            });
        }

        function enviarFormulario() {
            // Obtém os valores dos campos
            var chave = $('#chave').val();
            var nome = $('#nome').val();

            // Faz uma requisição AJAX para enviar os dados
            $.ajax({
                url: '@Url.Action("AdicionarUnidade", "Organizacao")', // URL do backend que receberá os dados
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    chave: chave,
                    nome: nome
                }),
                success: function (response) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Sucesso',
                        text: 'Unidade criada com sucesso!',
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // Aqui você pode fechar o modal ou atualizar a lista de unidades, por exemplo
                            window.location.reload(); // Atualiza a página após o sucesso
                        }
                    });
                },
                error: function (jqXHR) {
                    if (jqXHR.status === 409) { // Verifica se o status é 409 Conflict
                        Swal.fire({
                            icon: 'warning',
                            title: 'Conflito',
                            text: 'A unidade já existe. Verifique os dados e tente novamente.',
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Erro',
                            text: 'Ocorreu um erro ao criar a unidade. Tente novamente mais tarde.',
                        });
                    }
                }
            });
        }
    </script>
}